{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x65699F8F02bc2f51A2f7B84CbF106A304F22071c",
    "txHash": "0xe27f76e40a12ac4abc4c3df453e615da604c0c1c777ef9ba843f95af3ebd27a4",
    "deployTransaction": {
      "hash": "0xe27f76e40a12ac4abc4c3df453e615da604c0c1c777ef9ba843f95af3ebd27a4",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xa8D145Dd3003817dA1DC83F838Ee5088B65Acf2e",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca0f"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca0f"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 96,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x94563146770ac082cf0bf418fea2de186f6468f37c972e63f66900493f0c7b95",
      "s": "0x478cad26ae1a1889d3b7f6c6dcc2e7bc359e063c78fa917f45e34fbb3f1b7c22",
      "v": 0,
      "creates": "0x65699F8F02bc2f51A2f7B84CbF106A304F22071c",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x930C14cCb07F3e8fF667D757113FBbc067bBA1B4",
      "txHash": "0xdd43358c9761e3fbaf398e96df8337dfdb1fc415e3ed2a3bccd0b6fbb77a7479",
      "kind": "transparent"
    },
    {
      "address": "0x91DA6DB25e34f6DAc26D6116dCa2BbF018AFdFc5",
      "txHash": "0xfbd60c1018a0b7fdb339334b4a72225ead9d64493e359ab46e00abfc847eb90a",
      "kind": "transparent"
    },
    {
      "address": "0x2e7D333D983aeFBBCC011BCe98A5ad4E83288d8F",
      "txHash": "0x060156082d65195dffbcf0c31eb96b73ad7814598a01cbaf822e5c307e60cd86",
      "kind": "transparent"
    },
    {
      "address": "0x1020095B9DDE35Ea4335E7dafAEE90f5868ca83b",
      "txHash": "0x04d6d99cef4d874ef14012105a70a824ee18e9e60d08b66a680665c88427b71c",
      "kind": "transparent"
    },
    {
      "address": "0xb1BBcC65215e0064D77aA7cC5FC006f1d0943CE1",
      "txHash": "0xa5338f2305487d7d77492aaf50697b95a9ee031b8491e5ca206cfdc83dc244f2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a3fd0b0dc096cf4371f7ac24aa434b1dbe221af8b94989a1bd295f826af060e9": {
      "address": "0xc74757f99648008FF40a7431416114705396E582",
      "txHash": "0x657ac3859bf541550358a398aff66d9bcb9b17b10ae1a2365b9882540e35690c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "WolfPack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1891_storage",
            "src": "contracts/WolfPack.sol:26"
          },
          {
            "contract": "WolfPack",
            "label": "WP_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts/WolfPack.sol:28"
          },
          {
            "contract": "WolfPack",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:30"
          },
          {
            "contract": "WolfPack",
            "label": "_safeMintNumber",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:31"
          },
          {
            "contract": "WolfPack",
            "label": "_price",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:32"
          },
          {
            "contract": "WolfPack",
            "label": "_preReleaseMint",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:33"
          },
          {
            "contract": "WolfPack",
            "label": "_maxMint",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:34"
          },
          {
            "contract": "WolfPack",
            "label": "_pack",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:35"
          },
          {
            "contract": "WolfPack",
            "label": "_isPreRelease",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:36"
          },
          {
            "contract": "WolfPack",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:37"
          },
          {
            "contract": "WolfPack",
            "label": "_royaltiesReceiver",
            "type": "t_address",
            "src": "contracts/WolfPack.sol:39"
          },
          {
            "contract": "WolfPack",
            "label": "_royaltiesPercentage",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:41"
          },
          {
            "contract": "WolfPack",
            "label": "mintedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:43"
          },
          {
            "contract": "WolfPack",
            "label": "tokenHolder",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)1891_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "38ffc5a83d0a5752004287aec10b0e549faa67cadb5bc42b6b2662578413c97f": {
      "address": "0xcD36694B8613C683A00c5De8E33A3545C0F1556C",
      "txHash": "0xb0473a7177399a6acf10c667b2def94b67c78a02539c15a17d02817ad5e18d27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "WolfPack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1891_storage",
            "src": "contracts/WolfPack.sol:26"
          },
          {
            "contract": "WolfPack",
            "label": "WP_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts/WolfPack.sol:28"
          },
          {
            "contract": "WolfPack",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:30"
          },
          {
            "contract": "WolfPack",
            "label": "_safeMintNumber",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:31"
          },
          {
            "contract": "WolfPack",
            "label": "_price",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:32"
          },
          {
            "contract": "WolfPack",
            "label": "_preReleaseMint",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:33"
          },
          {
            "contract": "WolfPack",
            "label": "_maxMint",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:34"
          },
          {
            "contract": "WolfPack",
            "label": "_pack",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:35"
          },
          {
            "contract": "WolfPack",
            "label": "_isPreRelease",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:36"
          },
          {
            "contract": "WolfPack",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:37"
          },
          {
            "contract": "WolfPack",
            "label": "_royaltiesReceiver",
            "type": "t_address",
            "src": "contracts/WolfPack.sol:39"
          },
          {
            "contract": "WolfPack",
            "label": "_royaltiesPercentage",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:41"
          },
          {
            "contract": "WolfPack",
            "label": "mintedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:43"
          },
          {
            "contract": "WolfPack",
            "label": "tokenHolder",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)1891_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "0ddeb564600c9d0c08f756f235c97f75cee4c1b4adf13bf1e961030a4051bf8b": {
      "address": "0x56330FF19dc75934D1aA30D11c72604C7Fd22dC0",
      "txHash": "0x33be0e87e2ff208344fe29e8d55c19017dae89bc1be7ae0e70ab0176d6c93e2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "WolfPack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1472_storage",
            "src": "contracts/WolfPack.sol:15"
          },
          {
            "contract": "WolfPack",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/WolfPack.sol:17"
          },
          {
            "contract": "WolfPack",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:18"
          },
          {
            "contract": "WolfPack",
            "label": "_safeMintNumber",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:19"
          },
          {
            "contract": "WolfPack",
            "label": "_price",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:20"
          },
          {
            "contract": "WolfPack",
            "label": "_preReleaseMint",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:21"
          },
          {
            "contract": "WolfPack",
            "label": "_maxMint",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:22"
          },
          {
            "contract": "WolfPack",
            "label": "_pack",
            "type": "t_uint256",
            "src": "contracts/WolfPack.sol:23"
          },
          {
            "contract": "WolfPack",
            "label": "_isPreRelease",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:24"
          },
          {
            "contract": "WolfPack",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:25"
          },
          {
            "contract": "WolfPack",
            "label": "mintedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:27"
          },
          {
            "contract": "WolfPack",
            "label": "tokenHolder",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:28"
          },
          {
            "contract": "WolfPack",
            "label": "whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WolfPack.sol:29"
          },
          {
            "contract": "WolfPack",
            "label": "blacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WolfPack.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)1472_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "88ce4f5dedde56f9675c5fba02437975276f2ca340eb635e08a83fa5bd0923ba": {
      "address": "0x493F99cE1d8cFBc561f086A02929f2416CDC51b5",
      "txHash": "0xed6c0a940faba989de6d2f49ef484f03295716f63753bc32f1d6637c969f8d4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/ContextUpgradeable.sol:32"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/OwnableUpgradeable.sol:23"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/ERC165Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/ERC721Upgradeable.sol:26"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/ERC721Upgradeable.sol:29"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ERC721Upgradeable.sol:32"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ERC721Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ERC721Upgradeable.sol:38"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/ERC721Upgradeable.sol:420"
          },
          {
            "contract": "WolfPack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)294_storage",
            "src": "contracts/WolfPack.sol:15"
          },
          {
            "contract": "WolfPack",
            "label": "baseURIcid",
            "type": "t_string_storage",
            "src": "contracts/WolfPack.sol:17"
          },
          {
            "contract": "WolfPack",
            "label": "preMinted",
            "type": "t_uint16",
            "src": "contracts/WolfPack.sol:18"
          },
          {
            "contract": "WolfPack",
            "label": "mintingSupply",
            "type": "t_uint16",
            "src": "contracts/WolfPack.sol:19"
          },
          {
            "contract": "WolfPack",
            "label": "_isPreRelease",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:20"
          },
          {
            "contract": "WolfPack",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/WolfPack.sol:21"
          },
          {
            "contract": "WolfPack",
            "label": "_royaltiesReceiver",
            "type": "t_address",
            "src": "contracts/WolfPack.sol:22"
          },
          {
            "contract": "WolfPack",
            "label": "mintedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:24"
          },
          {
            "contract": "WolfPack",
            "label": "tokenHolder",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/WolfPack.sol:25"
          },
          {
            "contract": "WolfPack",
            "label": "whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WolfPack.sol:26"
          },
          {
            "contract": "WolfPack",
            "label": "blacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WolfPack.sol:27"
          }
        ],
        "types": {
          "t_struct(Counter)294_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
